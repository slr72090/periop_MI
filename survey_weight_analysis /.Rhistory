#
# pr_df <- stack(pr_list) %>%
#   as.data.frame() %>%
#   stats::setNames(c("code","type"))
#
# core_df$surgery_type <- sapply(as.numeric(core_df$prccs1), pr_class_fun, code_df = pr_df)
#
## ASCVD risk factors ## --------------------------------------------------------------------------
# Hyperlipidemia
core_df$HLD <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "2720|2721|2722|2723|2724")
# Tobacco
core_df$smoking <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "V1582|3051")
# CKD
core_df$ckd <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^585|7925|^V420|^V451|^V56|9580")
# DM
core_df$hx_DM <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string =  "24900|25000|25001|V5391|V6546|24901|24910|24911|24920|24921|24930|24931|24940|24941|24950|24951|24960|24961|24970|24971|24980|24981|24990|24991|^250"
)
## Malignancy
malig_string <- c(11:42)
core_df$malignancy <- apply(core_df %>%
select(starts_with("dxccs")),
1,
pr_fun,
code = malig_string)
## Prior VTE
core_df$hx_VTE <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "V1251")
## ASCVD ## --------------------------------------------------------------------------
core_df$CAD <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^414|^V4581|^V4582")
core_df$PAD <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^440|4439|^557")
core_df$prior_MI <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^412")
core_df$prior_TIA <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "V1254")
core_df$hx_CVA <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^438") #V1254|
core_df$prior_PCI <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "V4582")
core_df$prior_CABG <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "V4581")
core_df$CHF_sys <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^4282")
core_df$CHF_dia <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^4283")
core_df$CHF_com <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^4284")
core_df$CHF_unsp <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^4280")
##  Surgery_type or intervention ## ---------------------------------------------------------------------
core_df$thoracic_surgery <- sapply(core_df$prccs1,# %>%  select(starts_with("prccs")),
#1,
pr_fun,
code = c(36:40,42))
core_df$transplant <- apply(core_df %>% select(starts_with("prccs")),
1,
pr_fun,
code = c(176))
core_df$abdominal <- apply(core_df %>% select(starts_with("prccs")),
1,
pr_fun,
code = c(71:75,89))##80,84,89))#,90))
core_df$vascular <- apply(core_df %>% select(starts_with("prccs")),
1,
pr_fun,
code = c(51,52,56))
#core_df$vascular <- apply(core_df %>% select(starts_with("pr")) %>% select(-starts_with("prccs")),
# 1,
# dx_fun,
# string = paste(c("^",paste(as.character(paste0(380,c(1:2,4:7))), collapse = "|^"),
#           "|^",paste(as.character(paste0(381,c(1:2,4:6))), collapse = "|^"),
#           "|^",paste(as.character(paste0(383,c(1:2,4:7))), collapse = "|^"),
#           "|^",paste(as.character(paste0(386,c(1:2,4:7))), collapse = "|^")),
#          "|^",paste(as.character(paste0(397,c(1,3,8))), collapse = "|^"), collapse = "")
#)
## ICD9 codes:
# 3801 - 3802, 3804-3807: Incision of vessels (not upper or lower limb)
# 3811 - 3812, 3814-3816: End-arterectomy
# 3831 - 3837: Vessel resection with anastamosis
# 3841 - 3842, 3844-3847: Resection with replacement
# 3861 - 3862, 3864-3867: Other excision of vessel
core_df$invasive_mgmt <- apply(core_df %>% select(starts_with("prccs")),
1,
pr_fun,
code = c(44,45,46,47))
## Use of balloon pump
core_df$IABP <- apply(core_df %>% select(starts_with("pr")) %>%
select(-starts_with("prccs")),
1,
pr_fun,
code = 3761)
## MINS/VISION post-op covariates
core_df$Afib <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^4273")
core_df$sepsis <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^9959|78552")
core_df$PNA <-  apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^480|^481|^482|^483|^484|^485|^486|^4870")
core_df$PE <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^4151")
core_df$Bleed <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^2851|^99811") # Acute post-hemorrhage anemia, hemorrhage complicating procedure
core_df$DVT <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^4534|^4538|4539") # Acute DVT
##  Outcomes ## ---------------------------------------------------------------------
## NSTEMI vs STEMI
core_df$NSTEMI <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^4107")
core_df$cardiogenic_shock <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "78551")
## Other outcomes
core_df$Ischemic_stroke <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^433|^434")
core_df$MI <- apply(core_df %>% select(starts_with("dx")),
1,
dx_fun,
string = "^410")
## Dispo outcomes
core_df$ICF <- as.integer(core_df$dispuniform == 5)
core_df <- core_df %>% mutate(
# hx_DM = as.integer( cm_dmcx == 1), #cm_dm == 1 |
hx_isch_heart = as.integer(prior_MI==1 | CAD == 1),
hx_ckd = as.integer(ckd ==1 | cm_renlfail == 1),
hx_chf = as.integer(CHF_dia == 1 | CHF_sys == 1 | CHF_unsp == 1 | CHF_com == 1)) %>%
mutate(RCRI_pt = select(., c(hx_CVA, hx_DM, hx_isch_heart, hx_ckd, hx_chf)) %>% apply(1, sum, na.rm=TRUE)) %>%
select(-c(prior_TIA,
cm_dm,
cm_renlfail,
cm_dmcx,
ckd,
cm_chf))
data <-core_df %>%
mutate(age = as.numeric(age),
nchronic = as.numeric(nchronic), # of chronic diagnoses
died = as.numeric(died), # died during hospital admission
los = as.numeric(los), # length of stay
race = as.integer(race == 2), # binary race variable: non-hispanic african american
gender = as.integer(female == 0),
malignancy = as.integer(malignancy)
) %>% # male gender
mutate_if(is.integer, as.factor) %>%
select(c(age,
race,
gender,
MI,
nchronic,
cm_obese,
smoking,
cm_alcohol,
cm_htn_c,
HLD,
hx_DM,
hx_ckd,
CAD,
prior_MI,
hx_isch_heart,
prior_PCI,
prior_CABG,
cm_perivasc,
cm_valve,
hx_chf,
hx_VTE,
cm_chrnlung,
cm_alcohol,
malignancy,
cm_anemdef,
malignancy,
cm_mets,
hx_CVA,
thoracic_surgery,
transplant,
vascular,
abdominal,
RCRI_pt,
Ischemic_stroke,
Afib,
sepsis,
PNA,
PE,
DVT,
Bleed,
NSTEMI,
died,
invasive_mgmt,
IABP,
cardiogenic_shock,
ICF,
los,
prccs1,
year,
#discwt,
trendwt
))
if(drop_missing){
data <- data %>%
drop_na()
}## For now, remove missing data for analyses
data_all <- rbind(data_all, data)
}
data_all$ind <- c(1:nrow(data_all))
data_filename = "data_all_with_NA_weighted.rda"
data_formatted <- data_all %>%
rename(obesity = cm_obese,
alcoholic = cm_alcohol,
HTN = cm_htn_c,
valve_dz = cm_valve,
chrnlung = cm_chrnlung,
anemia = cm_anemdef,
PAD = cm_perivasc) %>%
mutate(age_factor = as.factor(ntile(age,3)),
age = as.numeric(scale(age)),
nchronic = as.numeric(scale(nchronic)),
invasive_mgmt = as.factor(invasive_mgmt),
high_risk_surgery = as.factor(as.numeric(transplant == 1|thoracic_surgery == 1|vascular == 1|abdominal == 1)),
high_risk_surgery_2 = as.factor(as.numeric(transplant == 1|thoracic_surgery == 1|vascular == 1)),
hx_revasc = as.factor(as.numeric(prior_CABG == 1 | prior_PCI ==1))) %>%
mutate(RCRI_pt = as.factor(as.numeric(RCRI_pt) + as.numeric(high_risk_surgery == 1))) %>%
mutate(severe_MI = as.factor(as.numeric(cardiogenic_shock == 1 | IABP == 1))) %>%
select(-c(prior_CABG, prior_PCI, prior_MI, CAD, nchronic)) %>% #transplant,thoracic_surgery,vascular,)) %>%
mutate(`RCRI >= 3` = as.factor(as.numeric(RCRI_pt) > 3))
save(data_formatted, data_all, file = data_filename)
# Specify the sampling design
dat_sv <- data_formatted %>% select(c(ind, MI, died))
survey_df <- svydesign(ids = ~hospid, strata = ~nis_stratum, weights = ~trendwt, data = dat_sv)
# Specify the sampling design
dat_sv <- data_formatted %>% select(c(ind, MI, died, hospid, nis_stratum, trendwt))
# Specify the sampling design
dat_sv <- data_all %>% select(c(ind, MI, died, hospid, nis_stratum, trendwt))
names(data_all)
47.71/2*-1 + 55
## Load package scripts -----------------------------------------------
library(survey)
require(ggplot2)
require(foreign)
require(readstata13)
require(dplyr)
require(tidyr)
require(FactoMineR)
require(PCAmixdata)
require(factoextra)
require(ggfortify)
require(RSQLite)
require(GGally)
require(reshape2)
require(cowplot)
require(corrplot)
require(tidyverse)
require(MASS)
library(proto)
library(pROC)
select <- dplyr::select
#Plotting specs
textSize = 12
save_plots = F
source("../utility_scripts/plot_themes.R")
#Data saving
data_filename = "data_all_with_NA_weighted.rda"
save_data = F
drop_missing = F
impute_missing = T
generate_data = F
output_tables = F
setwd("~/Desktop/perip_MI_GITHUB/survey_weight_analysis ")
# Identify procedures that correspond to non-cardiac surgeries
year_vec = c(2008:2013)
n_procedures_vec <- rep(15,length(year_vec)) #rep(15,length(year_vec)) # Number of possible procedures per individual for this year
n_dx_vec <- c(15, 25, 25, 25, 25, 25) # Number of possible diagnoses per individual for this year
source("process_data.R")
# Identify procedures that correspond to non-cardiac surgeries
year_vec = c(2008:2013)
n_procedures_vec <- rep(15,length(year_vec)) #rep(15,length(year_vec)) # Number of possible procedures per individual for this year
n_dx_vec <- c(15, 25, 25, 25, 25, 25) # Number of possible diagnoses per individual for this year
source("process_data.R")
data_formatted <- data_all %>%
rename(obesity = cm_obese,
alcoholic = cm_alcohol,
HTN = cm_htn_c,
valve_dz = cm_valve,
chrnlung = cm_chrnlung,
anemia = cm_anemdef,
PAD = cm_perivasc) %>%
mutate(age_factor = as.factor(ntile(age,3)),
age = as.numeric(scale(age)),
nchronic = as.numeric(scale(nchronic)),
invasive_mgmt = as.factor(invasive_mgmt),
high_risk_surgery = as.factor(as.numeric(transplant == 1|thoracic_surgery == 1|vascular == 1|abdominal == 1)),
high_risk_surgery_2 = as.factor(as.numeric(transplant == 1|thoracic_surgery == 1|vascular == 1)),
hx_revasc = as.factor(as.numeric(prior_CABG == 1 | prior_PCI ==1))) %>%
mutate(RCRI_pt = as.factor(as.numeric(RCRI_pt) + as.numeric(high_risk_surgery == 1))) %>%
mutate(severe_MI = as.factor(as.numeric(cardiogenic_shock == 1 | IABP == 1))) %>%
select(-c(prior_CABG, prior_PCI, prior_MI, CAD, nchronic)) %>% #transplant,thoracic_surgery,vascular,)) %>%
mutate(`RCRI >= 3` = as.factor(as.numeric(RCRI_pt) > 3))
save(data_formatted, data_all, file = data_filename)
data_filename
data_filename <- "data_all_weighted_imputed.rda"
data = data_formatted
dat_sv <- data_all %>% select(c(ind, MI, died, hospid, nis_stratum, trendwt))
survey_df <- svydesign(ids = ~hospid, strata = ~nis_stratum, weights = ~trendwt, data = dat_sv)
surv <- svytotal(~row, survey_df, survey.lonely.psu="adjust")
survey_df <- svydesign(ids = ~hospid, strata = ~nis_stratum, weights = ~trendwt, data = dat_sv, nest = T)
surv <- svytotal(~row, survey_df, survey.lonely.psu="adjust")
surv <- svytotal(~row, as.matrix(survey_df), survey.lonely.psu="adjust")
str(survey_df)
length(unique(data_all$nis_stratum))
str(data_all$nis_stratum)
dat_sv <- data_all %>% select(c(ind, MI, died, hospid, nis_stratum, trendwt))
summary(dat_sv)
length(unique(dat_sv$hosp_id))
length(unique(dat_sv$hospid))
length(unique(dat_sv$nis_stratum))
help(svytotal)
surv <- svytotal(~row, design = survey_df)#survey.lonely.psu="adjust")
survey_df <- svydesign(ids = ~hospid, strata = ~nis_stratum, weights = ~trendwt, data = dat_sv)
# Specify the sampling design
dat_sv <- data_all %>% select(c(ind, MI, died, hospid, nis_stratum, trendwt)) %>%
drop_na()
survey_df <- svydesign(ids = ~hospid, strata = ~nis_stratum, weights = ~trendwt, data = dat_sv)
survey_df <- svydesign(ids = ~hospid, strata = ~nis_stratum, weights = ~trendwt, data = dat_sv)
survey_df <- svydesign(ids = ~hospid, strata = ~nis_stratum, weights = ~trendwt, data = dat_sv, nest =T)
surv <- svytotal(~row, design = survey_df, survey.lonely.psu="adjust", nest = T)
help(svytotal)
str(survey_df)
surv <- svytotal(~row, design = survey_df, survey.lonely.psu="adjust", fpc = fpc)
# Specify the sampling design
dat_sv <- data_all %>% select(c(ind, MI, died, hospid, nis_stratum, trendwt)) %>%
drop_na() %>%
mutate_if(is.integer, as.numeric) %>%
mutate_if(is.factor, as.character) %>%
mutate_if(is.character, as.numeric)
survey_df <- svydesign(ids = ~hospid, strata = ~nis_stratum, weights = ~trendwt, data = dat_sv, nest =T)
str(survey_df)
surv <- svytotal(~row, design = survey_df, survey.lonely.psu="adjust", fpc = fpc)
surv <- svytotal( design = survey_df, survey.lonely.psu="adjust", fpc = fpc)
surv <- svytotal(~MI, design = survey_df, survey.lonely.psu="adjust", fpc = fpc)
surv
dat_sv <- data_all %>% select(c(ind, MI, died, hospid, nis_stratum, trendwt))
mutate(row = c(1:nrow(data_all))#%>%
)
# Specify the sampling design
dat_sv <- data_all %>% select(c(ind, MI, died, hospid, nis_stratum, trendwt)) %>%  mutate(row = c(1:nrow(data_all)))
survey_df <- svydesign(ids = ~hospid, strata = ~nis_stratum, weights = ~trendwt, data = dat_sv, nest =T)
sv_total_row <- svytotal(~row, design = survey_df, survey.lonely.psu="adjust", fpc = fpc)
sv_total_rwo
sv_total_row
# Specify the sampling design
dat_sv <- data_all %>% select(c(ind, MI, died, hospid, nis_stratum, trendwt)) %>%  mutate(row = rep(1,nrow(data_all)))
survey_df <- svydesign(ids = ~hospid, strata = ~nis_stratum, weights = ~trendwt, data = dat_sv, nest =T)
sv_total_row <- svytotal(~row, design = survey_df, survey.lonely.psu="adjust", fpc = fpc)
sv_total_row
sv_total_MI <- svytotal(~MI, design = survey_df, survey.lonely.psu="adjust", fpc = fpc)
sv_total_MI
# Enter your answer using a `for` loop here
input_vec = seq(3,13,2)
output_vec = array(NA, length(input_vec))
for( i in c(1:length(input_vec)){
output_vec[i] <- input_vec[i]*3 -4
}
print(output_vec)
input_vec
# Enter your answer using a `for` loop here
input_vec = seq(3,13,2)
output_vec = array(NA, length(input_vec))
for( i in c(1:length(input_vec))){
output_vec[i] <- input_vec[i]*3 -4
}
print(output_vec)
this_version <-
purrr::map_dbl(
.x = seq(3,13,2), .f = function(x) {x * 3 - 4}
)
this_versio
this_version
x <- seq(from = 1, to = 7, by = 2)
y <- seq(from = 6, to = 3, by = -1)
z <- array(NA, length(x))
for(i in c(1:length(x))){
z <- x[i]*y[i] + .5
}
z
length(x)
z <- array(NA, length(x))
for(i in c(1:length(x))){
z[i] <- x[i]*y[i] + .5
}
z
this_version <-
purrr::map_dbl(
.x = x, .y = y, .f = function(x,y) {x * y + .5}
)
this_version <-
purrr::map2_dbl(
.x = x, .y = y, .f = function(x,y) {x * y + .5}
)
this_version
w <- seq(from = 1, to = 9, by = 2)
s <- array(NA, length(w))
s[1] <- w[1]
for(i in c(2:length(w))){
s[i] <- w[i] + w[i-1]
}
s
s <- array(NA, length(w))
s[1] <- w[1]
for(i in c(2:length(w))){
s[i] <- w[i] + s[i-1]
}
s
help(accumulate)
this_version <-
purrr::accumulate(
.x = w
)
this_version <-
purrr::accumulate(
.x = w, .f = "+"
)
this_version
this_version <-
purrr::accumulate(
.x = w, .f = (.x, "+")
)
w = 1:5
w
1:5 %>% accumulate(`+`)
s <- w  %>% accumulate("+")
s
s <- w  %>% accumulate(`+``)
s%>% accumulate(`+`)
w %>% accumulate(`+`)
accumulate(w)
accumulate(.x = w,.f = function(.x){.x[i] + .x[i-1]})
accumulate(w,`+`)
w
w <- seq(from = 1, to = 9, by = 2)
s <- accumulate(w,`+`)
s
vec <- c(1:5)
vec[1:2]
vec[c(1,4:5)]
x <- seq(from = 1, to = 7, by = 2)
y <- seq(from = 6, to = 3, by = -1)
z <- array(NA, length(x))
for(i in c(1:length(x))){
z[i] <- x[i]*y[i]*.5 + 1
}
z
x%*%y
x*y
x*(y/2) + 1
# Specify the sampling design
dat_sv <- data_all %>% mutate(row = rep(1,nrow(data_all)))
survey_df <- svydesign(ids = ~hospid, strata = ~nis_stratum, weights = ~trendwt, data = dat_sv, nest =T)
sv_total_row <- svytotal(~row, design = survey_df, survey.lonely.psu="adjust", fpc = fpc)
prop.table(svytable(~gender, design = survey_df))
help(prop.table)
test.chisq(svytable(~gender, design = survey_df))
chisq.test(svytable(~gender, design = survey_df))
